---
layout: post
title:  "(RDBMS) --> (graph)"
date:   2014-07-21 19:26:00
categories: RDBMS graph
---
# Acerca
Buscando probar un base de datos NoSQL, más precisamente una base de grafos como es [Neo4j][neo4j], me di cuenta que no tenia datos para hacerlo.
En verdad si, podía jugar con [cypher][neo4j sample db] pero quería ver como _acomodar_ una base de datos relacional en este nuevo esquema.
Para esto me propuse **migrar** la base de datos [sakila][mysql sakila], pasarla de un esquema relacional a uno de grafos.
comenzando por las tablas y relaciones y continuar con las vistas.

## Plan
Los pasos que tengo que realizar son:

### Metadata
Analizar la estructura del modelo relacional, el de grafos y sus las similitudes

1. Entender los patrones básicos de los grafos para poder traducir las tablas y sus relaciones (FK -> PK). 
2. Migrar la estructura de la base relacional, **no los datos**. para tener un esquema base e ir probando diferentes cosas.
3. Ver esta estructura en un gráfico.

{% highlight ruby %}
def foo
  puts 'foo'
end
{% endhighlight %}

### Definir la estructura a migrar
En una primera instancia voy a migrar la base completa, por cada tupla genero un nodo, por cada _foreign key_ en una tabla, una relación en la nueva base

### Optimizar la migración

Procesar JDBC Metadatadddddddddddd
======================
Que es una base de datos relacional?
Bueno es esto [mysql][mysql]
Para poder leer esta estructura utilizo las apis [jdbc][api jdbc] de java, primero leo de [java.sql.ResultSet][api ResultSet]


Procesa JDBC Metadata
---------------------
Carga de objetos
-------------

Tabla1 | tabla1_has_tabla2| Tabla2
-----|---|---
film|film_has_actor|actor
film|film_has_actor|actor
film|film_has_actor|actor



# Genera archivos
## Archivos Cypher
### JavaBeans
### etc
# BatchImport
## Metadata en Neo4J
## Datos de la base relacional
# Depura relaciones de grafos



  [mysql]: http://dev.mysql.com/doc/index-other.html
  [mysql sakila]: http://dev.mysql.com/doc/sakila/en/
  [api jdbc]: http://docs.oracle.com/javase/7/docs/technotes/guides/jdbc/
  [api ResultSet]: http://docs.oracle.com/javase/7/docs/api/java/sql/ResultSet.html
  [api DatabaseMetaData]: http://docs.oracle.com/javase/7/docs/api/java/sql/DatabaseMetaData.html
  [neo4j]: http://neo4j.com
  [neo4j sample db]: http://docs.neo4j.org/chunked/stable/cypherdoc-movie-database.html
  [groovy]: http://groovy.codehaus.org/
  
  
